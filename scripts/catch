#!/usr/bin/env python3
# Licensed with the 3-clause BSD license.  See LICENSE for details.

import argparse
import uuid
import logging
from astropy.table import Table
from catch import Catch, Config

sources = list(Catch.SOURCES.keys()) + ['any']

parser = argparse.ArgumentParser('catch')
parser.add_argument('desg')
parser.add_argument(
    '--source', default='any', choices=sources,
    help='search this observation source')
parser.add_argument(
    '--force', dest='cached', action='store_false',
    help='do not use cached results')
parser.add_argument(
    '--config', help='CATCH configuration file')
parser.add_argument(
    '--debug', action='store_true', help='debug mode')

args = parser.parse_args()

rows = []
with Catch(Config.from_args(args), save_log=True, debug=args.debug) as catch:
    job_id = uuid.uuid4()
    count = catch.query(args.desg, job_id, source=args.source, cached=args.cached,
                        eph_source='jpl')
    for row in catch.caught(job_id):
        r = {}
        for table in row:
            for k in table.__table__.columns.keys():
                r[k] = getattr(table, k)
        rows.append(r)

if rows == []:
    print('# none found')
else:
    tab = Table(rows=rows)
    tab.pprint(-1, -1)
